@using Newtonsoft.Json
@model IList<Tournamin.web.Models.Group>
@{
    ViewBag.Title = "Fake tournament";
}
@section featured {
    <section class="featured">
        <div class="content-wrapper" style="text-align: right;">
            <hgroup class="title">
                <h1>@ViewBag.Title.</h1>
            </hgroup>
            <p>
                This is a fake tournament
            </p>
        </div>
    </section>
}
<div data-bind="foreach: Groups">
    <div class="group">
        <h1>
            Group <span data-bind="text:GroupName"></span>
        </h1>
        <ul data-bind="foreach:Matches">
            <li>
                <label class="team team-a" data-bind="text:TeamA">
                </label>
                <input class="score" type="text" data-bind="value:ScoreA" />
                -
                <input class="score" type="text" data-bind="value:ScoreB" />
                @*@Html.TextBoxFor(x => match.ScoreA, new { @class = "score" }) - @Html.TextBoxFor(x => match.ScoreB, new { @class = "score" })*@
                <label class="team team-b" data-bind="text:TeamB">
                </label>
            </li>
        </ul>
    </div>
</div>
<input type="submit" value="Save" data-bind="click:save" />

<div data-bind="foreach: results" class="summary-tables">
    <table>
        <thead><tr>
                   <td>Lag</td>
                   <td>S</td>
                   <td>U</td>
                   <td>T</td>
                   <td>P</td>
               </tr></thead>
        <tbody data-bind="foreach:Teams">
            <tr>
                <td data-bind="text:TeamName"></td>
                <td data-bind="text:Wins"></td>
                <td data-bind="text:Draw"></td>
                <td data-bind="text:Losses"></td>
                <td data-bind="text:Points"></td>
            </tr>
        </tbody>
    </table>
</div>

@section scripts
{
    <script type="text/javascript">
        var groups = {};
        
        $(function() {
            groups.Groups = ko.mapping.fromJS(@Html.Raw(JsonConvert.SerializeObject(Model)));
            groups.save = function() {
                    
            };
            groups.results = ko.observableArray([{GroupName:'A', Teams:[
                    {TeamName:'Norge', Wins:0, Draw:0, Losses:1, Points:0},
                    {TeamName:'Hellas', Wins:1, Draw:0, Losses:0, Points:3}
                ]}, {GroupName:'B', Teams:[]}]);
            ko.applyBindings(groups);
        });
    </script>
}
